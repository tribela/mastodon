{{ $cache_name := printf "%s%s" $.APP "-cache" }}
proxy_cache_path /tmp/{{ $cache_name }} levels=1:2 keys_zone={{ $cache_name }}:10m inactive=7d;

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

log_format with_auth_{{ $.APP }} '$remote_addr - "$http_authorization" [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent"';

{{ range $port_map := .PROXY_PORT_MAP | split " " }}
{{ $port_map_list := $port_map | split ":" }}
{{ $scheme := index $port_map_list 0 }}
{{ $listen_port := index $port_map_list 1 }}

{{ $proxy_cache_settings := `
    proxy_cache {{ $cache_name }};
    proxy_cache_valid 200 10m;
    proxy_cache_valid 410 24h;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    add_header X-Cached $upstream_cache_status;
   ` | replace `{{ $cache_name }}` $cache_name }}

{{ if eq $scheme "http" }}
server {
  listen      [::]:{{ $listen_port }};
  listen      {{ $listen_port }};
  {{ if $.NOSSL_SERVER_NAME }}server_name {{ $.NOSSL_SERVER_NAME }}; {{ end }}
  access_log  /var/log/nginx/{{ $.APP }}-access.log with_auth_{{ $.APP }};
  error_log   /var/log/nginx/{{ $.APP }}-error.log;
  return 301 https://$host:{{ $.PROXY_SSL_PORT }}$request_uri;
}
{{ else if eq $scheme "https"}}
server {
  listen      [::]:{{ $listen_port }} ssl {{ if eq $.HTTP2_SUPPORTED "true" }}http2{{ else if eq $.SPDY_SUPPORTED "true" }}spdy{{ end }};
  listen      {{ $listen_port }} ssl {{ if eq $.HTTP2_SUPPORTED "true" }}http2{{ else if eq $.SPDY_SUPPORTED "true" }}spdy{{ end }};
  {{ if $.SSL_SERVER_NAME }}server_name {{ $.SSL_SERVER_NAME }}; {{ end }}
  {{ if $.NOSSL_SERVER_NAME }}server_name {{ $.NOSSL_SERVER_NAME }}; {{ end }}
  access_log  /var/log/nginx/{{ $.APP }}-access.log with_auth_{{ $.APP }};
  error_log   /var/log/nginx/{{ $.APP }}-error.log;

  ssl_certificate     {{ $.APP_SSL_PATH }}/server.crt;
  ssl_certificate_key {{ $.APP_SSL_PATH }}/server.key;
  ssl_protocols       TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;

  keepalive_timeout   70;
  {{ if and (eq $.SPDY_SUPPORTED "true") (ne $.HTTP2_SUPPORTED "true") }}add_header          Alternate-Protocol  {{ $.PROXY_SSL_PORT }}:npn-spdy/2;{{ end }}

  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  add_header Strict-Transport-Security "max-age=31536000";

  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Proxy "";
  proxy_pass_header Server;

  proxy_buffering on;
  proxy_redirect off;
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection $connection_upgrade;

  tcp_nodelay on;


  {{ if eq "true" (var "S3_ENABLED") }}
  {{ if var "S3_ALIAS_HOST" }}
  rewrite ^/system/(.*)$ https://{{ var "S3_ALIAS_HOST" }}/$1 permanent;
  {{ else }}
  rewrite ^/system/(.*)$ {{ var "S3_PROTOCOL" }}://{{ var "S3_HOSTNAME" }}/{{ var "S3_BUCKET" }}/$1 permanent;
  {{ end }}
  {{ end }}

  location / {
    {{ if eq $.HTTP2_PUSH_SUPPORTED "true" }}http2_push_preload on; {{ end }}
    {{ $proxy_cache_settings }}
    proxy_pass http://{{ $.APP }}-web;
  }

  location /gallery {
    alias /var/www/gallery;
    index index.html;

    location /gallery/static {
      add_header Cache-Control 'public, max-age=604800, immutable';
    }
  }

  location ~/(emoji|packs|system/accounts/avatars|system/site_uploads|system/media_attachments/files) {
    add_header Cache-Control "public, max-age=31536000, immutable";
    {{ $proxy_cache_settings }}
    proxy_pass http://{{ $.APP }}-web;
  }

  location /sw.js {
    add_header Cache-Control "public, max-age=0";
    {{ $proxy_cache_settings }}
    proxy_pass http://{{ $.APP }}-web;
  }

  location /api/v1/streaming {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Proxy "";

    proxy_pass http://{{ $.APP }}-streaming;
    proxy_buffering off;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    tcp_nodelay on;
  }

  include {{ $.DOKKU_ROOT }}/{{ $.APP }}/nginx.conf.d/*.conf;

  error_page 500 501 502 503 504 /500.html;
}
{{ end }}{{ end }}

{{ if $.DOKKU_APP_WEB_LISTENERS }}

{{ range $upstream_port := $.PROXY_UPSTREAM_PORTS | split " " }}
upstream {{ $.APP }}-web {
{{ range $listeners := $.DOKKU_APP_WEB_LISTENERS | split " " }}
  server {{ $listeners }};
{{ end }}
}
{{ end }}
{{ end }}

{{ if $.DOKKU_APP_STREAMING_LISTENERS }}
upstream {{ $.APP }}-streaming {
{{ range $listeners := $.DOKKU_APP_STREAMING_LISTENERS | split " " }}
  server {{ $listeners }};
}
{{ end }}
{{ end }}
